{"version":3,"sources":["assets/images/image2.png","axios.tsx","components/Theme/Theme.tsx","components/Menu/Menu.tsx","components/Header/Header.tsx","components/PageTitle/PageTitle.tsx","components/Footer/Footer.tsx","components/Error/Error.tsx","components/Loader/Loader.tsx","pages/HomePage/HomePage.tsx","pages/AboutMePage/AboutMePage.tsx","pages/SkillsPage/SkillsPage.tsx","pages/EducationPage/EducationPage.tsx","pages/ProjectsPage/ProjectsPage.tsx","pages/ProjectsPage/ProjectPage.tsx","pages/ExperiencePage/ExperiencePage.tsx","pages/ContactMePage/ContactMePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/image1.jpg"],"names":["module","exports","instance","axios","create","baseURL","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","list","width","fullList","Menu","isOpen","onClickHandler","classes","className","clsx","role","onClick","onKeyDown","List","ListItem","component","NavLink","to","exact","button","key","ListItemIcon","ListItemText","Divider","Drawer","open","onClose","createStyles","root","flexGrow","zIndex","menuButton","marginRight","spacing","border","title","Header","useState","isMenuOpen","setIsMenuOpen","toggleDrawer","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","PageTitle","location","useLocation","setTitle","useEffect","pathname","Fragment","bottom","textAlign","backgroundColor","fontSize","Footer","Error","Box","Loader","display","m","height","justifyContent","alignContent","marginTop","alignItems","CircularProgress","HomePage","props","setList","data","name","lines","push","label","headline","bgImages","image1","image2","mt","p","borderRadius","bgcolor","length","startDelay","cursor","hideWhenDone","map","text","index","Delay","ms","images","duration","transition","left","large","AboutMePage","summary","split","placeholder","Avatar","alt","src","picture","medium","SkillsPage","flexWrap","skill","Card","CardHeader","avatar","logo","subheader","knownSince","CardContent","yearsOfExperience","CardActions","Rating","value","rating","precision","readOnly","pb","courseList","maxWidth","background","paper","buttons","textTransform","EducationPage","schools","setSchools","courses","setCourses","school","institution","area","description","studyType","start","year","end","Button","href","website","startIcon","target","size","course","Chip","icon","media","backgroundSize","paddingTop","ProjectsPage","project","once","displayName","action","languages","join","CardMedia","image","resolutions","thumbnail","url","card","margin","expand","transform","marginLeft","transitions","shortest","expandOpen","ProjectPage","projectData","setProjectData","photoIndex","setPhotoIndex","setIsOpen","React","expanded","setExpanded","undefined","CardActionArea","mobile","align","gallery","caption","sentence","aria-expanded","Collapse","in","timeout","unmountOnExit","libraries","mainSrc","desktop","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","ExperiencePage","work","company","month","logos","ContactMePage","basics","setBasics","profiles","profile","network","username","NotFoundPage","style","container","App","myBasics","setMyBasics","mySkills","setMySkills","myEducation","setMyEducation","myProjects","setMyProjects","myExperience","setMyExperience","error","setError","get","then","response","updatedBasics","shift","updatedSkilss","skills","updatedSchools","education","updatedProjects","projects","updatedExperiences","experience","catch","content","path","render","match","params","id","CssBaseline","Container","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.40465c80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image2.544af090.png\";","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://gitconnected.com/v1/portfolio/huseyindeniz'\r\n});\r\n\r\nexport default instance;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: { main: '#efefef' },\r\n        secondary: { main: '#333' }\r\n    }\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 'auto',\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport interface MenuProps {\r\n  isOpen: boolean;\r\n  onClickHandler: Function;\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ isOpen, onClickHandler }): JSX.Element => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const list = (\r\n    <div className={clsx(classes.list)}\r\n    role=\"presentation\"\r\n    onClick={() => onClickHandler(false)}\r\n    onKeyDown={() => onClickHandler(false)}\r\n    >\r\n      <List>\r\n        <ListItem component={NavLink} to=\"/\" exact button key='Home' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><HomeIcon /></ListItemIcon>\r\n          <ListItemText primary='Home' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/about-me\" exact button key='AboutMe' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><InfoIcon /></ListItemIcon>\r\n          <ListItemText primary='About Me' />\r\n        </ListItem>\r\n        <Divider />\r\n\r\n        <ListItem component={NavLink} to=\"/skills\" exact button key='Skills' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><ClassIcon /></ListItemIcon>\r\n          <ListItemText primary='Skills' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/education\" exact button key='Education' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n          <ListItemText primary='Education' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/projects\" exact button key='Projects' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><CheckCircleIcon /></ListItemIcon>\r\n          <ListItemText primary='Projects' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/experience\" exact button key='Experience' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><WorkIcon /></ListItemIcon>\r\n          <ListItemText primary='Experience' />\r\n        </ListItem>\r\n\r\n        <Divider />\r\n\r\n        <ListItem component={NavLink} to=\"/contact-me\" button key='Contact' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><ContactMailIcon /></ListItemIcon>\r\n          <ListItemText primary='Contact Me' />\r\n        </ListItem>\r\n      </List>\r\n    </div >\r\n  );\r\n\r\n  return (\r\n    <Drawer key=\"1\" open={isOpen} onClose={() =>onClickHandler(false)}>\r\n      {list}\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default Menu;","import React, { useState } from 'react';\r\nimport Menu from '../Menu/Menu';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            zIndex: 990\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            border: '1px solid #bbb',\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\nconst Header: React.FC = (): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\r\n\r\n    const toggleDrawer = (isOpen: boolean) => {\r\n        setIsMenuOpen(isOpen);\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" className={classes.root}>\r\n            <Toolbar>\r\n                <IconButton onClick={() => toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>huseyindeniz.net</Typography>\r\n            </Toolbar>\r\n            <Menu isOpen={isMenuOpen} onClickHandler={toggleDrawer} />\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst PageTitle: React.FC = (): JSX.Element => {\r\n    const location = useLocation();\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        switch (location.pathname) {\r\n            case '/':\r\n                setTitle('');\r\n                break;\r\n            case '/about-me':\r\n                setTitle('About Me');\r\n                break;\r\n            case '/skills':\r\n                setTitle('Skills');\r\n                break;\r\n            case '/education':\r\n                setTitle('Education');\r\n                break;\r\n            case '/projects':\r\n                setTitle('Projects');\r\n                break;\r\n            case '/experience':\r\n                setTitle('Experience');\r\n                break;\r\n            case '/contact-me':\r\n                setTitle('Contact Me');\r\n                break;\r\n            default:\r\n                setTitle('');\r\n                break;\r\n        }\r\n    }, [location]);\r\n\r\n    if (title !== '') {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h4\" color=\"textPrimary\" component=\"h1\">{title}</Typography>\r\n                <Divider />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (<React.Fragment />);\r\n    }\r\n}\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#efefef\",\r\n        fontSize: \"0.6rem\"\r\n    },\r\n});\r\n\r\nconst Footer: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <p>{'\\u00A9'} Copyright, 2020<br />\r\n            Used tech stack in this web site: React.js(with Hooks), Typescript, Material-UI. Developed by Hüseyin Deniz KIVRAK and freely hosted on Github Pages.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\n\r\nconst Error: React.FC = (): JSX.Element => {\r\n    return (\r\n        <Box>\r\n            <Typography>An error occured.</Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loader: React.FC = (): JSX.Element => (\r\n    <Box display=\"flex\" width={'80%'} m=\"auto\" height=\"200px\" justifyContent=\"center\" alignContent=\"center\" marginTop=\"20px\" alignItems=\"center\">\r\n        <CircularProgress color=\"secondary\" />\r\n    </Box>\r\n);\r\n\r\nexport default Loader;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Basics } from '../../appTypes';\r\n\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport Typist from 'react-typist';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport BackgroundSlider from 'react-background-slider';\r\nimport image1 from '../../assets/images/image1.jpg';\r\nimport image2 from '../../assets/images/image2.png';\r\n\r\nimport './HomePage.css';\r\n\r\nconst HomePage: React.FC<Basics> = (props): JSX.Element => {\r\n\r\n    const [list, setList] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        if (props.data.name !== '') {\r\n            let lines: Array<string> = [];\r\n            lines.push(props.data.name);\r\n            lines.push(' ');\r\n            lines.push(props.data.label);\r\n            lines.push(' ');\r\n            lines.push(props.data.headline);\r\n            setList(lines);\r\n        }\r\n    }, [props.data]);\r\n\r\n    const bgImages = [image1, image2];\r\n    return (\r\n        <React.Fragment>\r\n            <Box width={'80%'} m=\"auto\" mt={2} p={2} textAlign=\"center\" borderRadius=\"10px\" color=\"grey\" bgcolor=\"rgba(255,255,255,0.5)\">\r\n                {list.length > 0 ?\r\n                    <Typist startDelay={2000} cursor={{ hideWhenDone: true }}>\r\n                        {list.map((text, index) => { return (<Typography variant=\"h5\" component=\"span\" key={index}>{text}<Typist.Delay ms={1250} /><br /></Typography>) })}\r\n                    </Typist> :\r\n                    <Loader />\r\n                }\r\n                <BackgroundSlider images={bgImages} duration={5} transition={2} />\r\n            </Box>\r\n            <Box width={'80%'} fontSize=\"0.6rem\" m=\"auto\" p={1} position=\"fixed\" bottom=\"70px\" left=\"10%\" textAlign=\"center\" borderRadius=\"10px\" color=\"grey\" bgcolor=\"rgba(255,255,255,0.2)\">\r\n                Notice: As a Westworld fan, I used some public images from the show that I found on the internet.\r\n                In case of request due to copyright issues, they will be removed.\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core'\r\nimport { Basics } from '../../appTypes';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        large: {\r\n            width: theme.spacing(20),\r\n            height: theme.spacing(20),\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nconst AboutMePage: React.FC<Basics> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        if (props.data.summary !== '') {\r\n            setList(props.data.summary.split('\\n'));\r\n        }\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <Typography component=\"div\">\r\n            <Box width={'80%'} m=\"auto\" mt={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Summary</Typography>\r\n                {list.length > 0 ?\r\n                    list.map((text, index) => (\r\n                        <Box key={index} m={1}>\r\n                            - {text}\r\n                        </Box>\r\n                    )) :\r\n                    <Loader />\r\n                }\r\n                <Box display=\"flex\" m=\"auto\" p={2} justifyContent=\"center\" alignContent=\"center\" alignItems=\"center\">\r\n                    <LazyLoad placeholder={<Loader />}><Avatar alt={props.data.name} src={props.data.picture} className={classes.large} /></LazyLoad>\r\n                </Box>\r\n            </Box>\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default AboutMePage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Skills, Skill } from '../../appTypes';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n        },\r\n    }),\r\n);\r\n\r\nconst SkillsPage: React.FC<Skills> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<Skill>>([]);\r\n\r\n    useEffect(() => {\r\n        setList(props.data);\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Featured Skills</Typography>\r\n            </Box>\r\n            {list.length > 0 ?\r\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\" p={1} m={1}>\r\n                    {list.map((skill, index) => (\r\n                        <Box p={1} key={index} flexGrow={1}>\r\n                            <Card>\r\n                                <CardHeader avatar={<LazyLoad placeholder={<Loader />}><Avatar\r\n                                    variant=\"rounded\"\r\n                                    className={classes.medium}\r\n                                    alt={skill.name}\r\n                                    src={skill.logo} /></LazyLoad>}\r\n                                    title={skill.name} subheader={\"known since \" + skill.knownSince} />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {skill.yearsOfExperience} year(s) professional work experience\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Rating name=\"read-only\" value={skill.rating} precision={0.5} readOnly />\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Box>\r\n                    ))}\r\n                </Box> :\r\n                <Loader />\r\n            }\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Certificates</Typography>\r\n                <ul>\r\n                    <li>ROS For Beginners Path from The Construct</li>\r\n                    <li>MCSD: App Builder from Microsoft</li>\r\n                    <li>Programming in HTML5 with Javascript and CSS3 Specialist</li>\r\n                    <li>MCP from Microsoft</li>\r\n                    <li>MTA from Microsoft</li>\r\n                </ul>\r\n            </Box>\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Languages</Typography>\r\n                <ul>\r\n                    <li>Turkish: Native or bilingual proficiency</li>\r\n                    <li>English: Professional working proficiency</li>\r\n                </ul>\r\n            </Box>\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Others</Typography>\r\n                <p>Under construction...</p>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SkillsPage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Education, School } from '../../appTypes';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        courseList: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n    }),\r\n);\r\n\r\nconst EducationPage: React.FC<Education> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [schools, setSchools] = useState<Array<School>>([]);\r\n    const [courses, setCourses] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        setSchools(props.schools);\r\n        setCourses(props.courses);\r\n    }, [props.schools, props.courses]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\" p={1} m={1}>\r\n                {schools.length > 0 ?\r\n                    schools.map((school, index) => (\r\n                        <Box p={1} key={index} flexGrow={1}>\r\n                            <Card>\r\n                                <CardHeader avatar={<LazyLoad placeholder={<Loader />}><Avatar\r\n                                    variant=\"rounded\"\r\n                                    className={classes.medium}\r\n                                    alt={school.institution}\r\n                                    src={school.logo} /></LazyLoad>}\r\n                                    title={school.institution}\r\n                                    subheader={school.area} />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {school.description}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {school.studyType}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {school.start.year} - {school.end.year}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Box width=\"100%\" textAlign=\"right\">\r\n                                        <Button\r\n                                            href={school.website}\r\n                                            className={classes.buttons}\r\n                                            startIcon={<OpenInNewIcon />}\r\n                                            target=\"_blank\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\">Institution Website</Button>\r\n                                    </Box>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Box>\r\n                    )) : <Loader />\r\n                }\r\n            </Box>\r\n            <Divider />\r\n            <Box mt={2}>\r\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"h1\">Featured courses that I took and enjoyed.</Typography>\r\n                {courses.length > 0 ?\r\n                    <Box display=\"flex\" flexWrap=\"wrap\" p={1} m={1}>\r\n                            {courses.map((course, index) => (\r\n                                <Box m={1} key={index}><Chip label={course} icon={<CheckIcon />} /></Box>\r\n                            ))}\r\n                    </Box> : <Loader />\r\n                }\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EducationPage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Projects, Project } from '../../appTypes';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        media: {\r\n            backgroundSize: 'contain',\r\n            height: 0,\r\n            paddingTop: '40%', // 16:9\r\n        },\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n    }),\r\n);\r\n\r\nconst ProjectsPage: React.FC<Projects> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<Project>>([]);\r\n\r\n    useEffect(() => {\r\n        setList(props.data);\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Featured Projects</Typography>\r\n            </Box>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\" p={1} m={1}>\r\n                {list.length > 0 ?\r\n                    list.map((project, index) => (\r\n                        <Box p={1} key={index} flexGrow={1}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    avatar={<LazyLoad once placeholder={<Loader />}><Avatar\r\n                                        variant=\"rounded\"\r\n                                        className={classes.medium}\r\n                                        alt={project.displayName}\r\n                                        src={project.logo} /></LazyLoad>}\r\n                                    title={project.displayName}\r\n                                    action={<Chip label={project.languages.join(', ')} size=\"small\" />} />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={project.images[0].resolutions.thumbnail.url}\r\n                                    title={project.displayName} />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                                        {project.summary}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Box width=\"100%\" display=\"flex\">\r\n                                        <Box flexGrow={1}>\r\n                                            <Button\r\n                                                className={classes.buttons}\r\n                                                href={'/#/projects/' + (index + 1)}\r\n                                                startIcon={<DetailsIcon />}\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\">Learn More</Button>\r\n                                        </Box>\r\n                                        <Box textAlign=\"right\">\r\n                                            <Button\r\n                                                className={classes.buttons}\r\n                                                href={project.website}\r\n                                                startIcon={<OpenInNewIcon />}\r\n                                                target=\"_blank\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\">Project Website</Button>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Box>\r\n                    )) : <Loader />}\r\n            </Box>\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Others</Typography>\r\n                <p>Under construction...</p>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProjectsPage;","import React, { useEffect, useState } from 'react';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { Project, ProjectDetail } from '../../appTypes';\r\n\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { CardActionArea, Chip, Divider, IconButton, Collapse, ListItem, List, ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        card: {\r\n            width: '80%',\r\n            margin: '0 auto'\r\n        },\r\n        media: {\r\n            backgroundSize: 'contain',\r\n            height: 0,\r\n            paddingTop: '30%', // 16:9\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n        medium: {\r\n            width: theme.spacing(5),\r\n            height: theme.spacing(5),\r\n        },\r\n        expand: {\r\n            border: '1px solid #bbb',\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n    }),\r\n);\r\n\r\nconst ProjectPage: React.FC<ProjectDetail> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [projectData, setProjectData] = useState<Project | undefined>();\r\n\r\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        setProjectData(props.data);\r\n    }, [props.data]);\r\n\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    if (projectData !== undefined && projectData !== null) {\r\n        return (\r\n            <React.Fragment>\r\n                <Box display=\"flex\" mt={2}>\r\n                    <Box flexGrow={1}>\r\n                        <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">\r\n                            Project: {projectData?.displayName}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box textAlign=\"right\">\r\n                        <Button\r\n                            href={'/#/projects'}\r\n                            className={classes.buttons}\r\n                            size=\"small\"\r\n                            startIcon={<BackIcon />}\r\n                            variant=\"outlined\">Back to All Projects</Button>\r\n                    </Box>\r\n                </Box>\r\n                <Divider />\r\n                <Box m={1} mt={2} pb={2}>\r\n                    <Card className={classes.card}>\r\n                        <CardHeader\r\n                            title={projectData?.displayName}\r\n                            action={<Chip label={projectData?.languages.join(', ')} size=\"small\" />}\r\n                            avatar={<LazyLoad once placeholder={<Loader />}><Avatar\r\n                                variant=\"rounded\"\r\n                                className={classes.medium}\r\n                                alt={projectData?.displayName}\r\n                                src={projectData?.logo} /></LazyLoad>}>\r\n                        </CardHeader>\r\n                        <CardActionArea onClick={() => setIsOpen(true)}>\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={projectData?.images[0].resolutions.mobile.url}\r\n                                title={projectData.displayName} />\r\n                            <CardContent>\r\n                                <Typography align=\"center\" variant=\"h6\" component=\"h3\">\r\n                                    {projectData?.gallery?.caption}\r\n                                </Typography>\r\n                                {projectData?.gallery?.description\r\n                                    .split('\\n')\r\n                                    .map( (sentence, index) => \r\n                                    <Typography key={index} align=\"center\" variant=\"body2\" component=\"p\">{sentence}</Typography>\r\n                                    )   \r\n                                }\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Box width=\"100%\" display=\"flex\">\r\n                                <Box flexGrow={1}>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        className={classes.buttons}\r\n                                        onClick={() => setIsOpen(true)}\r\n                                        startIcon={<PhotoLibraryIcon />}\r\n                                        size=\"small\"\r\n                                    >Open Gallery</Button>\r\n                                    <Button\r\n                                        className={classes.buttons}\r\n                                        href={projectData?.website}\r\n                                        startIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\">Website</Button>\r\n                                </Box>\r\n                                <Box textAlign=\"right\">\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"Technical Details\">\r\n                                        <ExpandMoreIcon />\r\n                                    </IconButton>\r\n                                </Box>\r\n                            </Box>\r\n                        </CardActions>\r\n                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                            <CardContent>\r\n                                <Divider />\r\n                                <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"h4\">\r\n                                    Technical Details\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"My Role\"\r\n                                            secondary=\"Backend Developer\" />\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Architecture\"\r\n                                            secondary=\"Monolitich\" />\r\n                                    </ListItem>                  \r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Languages\"\r\n                                            secondary={projectData?.languages.join(', ')} />\r\n                                    </ListItem>   \r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Frameworks / Libraries\"\r\n                                            secondary={projectData?.libraries.join(', ')} />\r\n                                    </ListItem>   \r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Notes\"\r\n                                            secondary={projectData?.description} />\r\n                                    </ListItem>                                                                                                                            \r\n                                </List>\r\n                            </CardContent>\r\n                        </Collapse>\r\n                    </Card>\r\n                    {isOpen ?\r\n                        <Lightbox\r\n                            mainSrc={projectData?.images[photoIndex].resolutions.desktop.url}\r\n                            nextSrc={projectData?.images[(photoIndex + 1) % projectData?.images.length].resolutions.desktop.url}\r\n                            prevSrc={projectData?.images[(photoIndex + projectData?.images.length - 1) % projectData?.images.length].resolutions.desktop.url}\r\n                            onCloseRequest={() => setIsOpen(false)}\r\n                            onMovePrevRequest={() =>\r\n                                setPhotoIndex((photoIndex + projectData?.images.length - 1) % projectData?.images.length)\r\n                            }\r\n                            onMoveNextRequest={() =>\r\n                                setPhotoIndex((photoIndex + 1) % projectData?.images.length)\r\n                            }\r\n                        /> : null\r\n                    }\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return <Loader />;\r\n    }\r\n};\r\n\r\nexport default ProjectPage;","import React, { useEffect, useState } from 'react';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Experiences, Experience } from '../../appTypes';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        }        \r\n    }),\r\n);\r\n\r\nconst ExperiencePage: React.FC<Experiences> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<Experience>>([]);\r\n\r\n    useEffect(() => {\r\n        setList(props.data);\r\n    }, [props.data]);\r\n\r\n    if (list.length > 0) {\r\n        return (\r\n            <React.Fragment>\r\n                <Box mt={2}>\r\n                    <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Featured Experiences</Typography>\r\n                </Box>\r\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\" p={1} m={1}>\r\n                    {list.length > 0 ?\r\n                        list.map((work, index) => (\r\n                            <Box p={1} key={index} flexGrow={1}>\r\n                                <Card>\r\n                                    <CardHeader\r\n                                        avatar={<LazyLoad placeholder={<Loader />}><Avatar\r\n                                            variant=\"rounded\"\r\n                                            className={classes.medium}\r\n                                            alt={work.company}\r\n                                            src={work.logo} /></LazyLoad>}\r\n                                        title={work.position}\r\n                                        subheader={work.company + \" / \" + work.location}\r\n                                        action={work.start.month + \"-\" + work.start.year + \" / \" + work.end.month + \"-\" + work.end.year} />\r\n                                    <CardContent>\r\n                                        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                                            {work.summary}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <Box width=\"100%\" textAlign=\"right\">\r\n                                            <Button\r\n                                                className={classes.buttons}\r\n                                                href={work.website}\r\n                                                startIcon={<OpenInNewIcon />}\r\n                                                target=\"_blank\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\">Company Website</Button>\r\n                                        </Box>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Box>\r\n                        )) : <Loader />\r\n                    }\r\n                </Box>\r\n                <Box mt={2} pb={2}>\r\n                    <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Others</Typography>\r\n                    <p>Under construction...</p>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Loader />\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default ExperiencePage;","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Box } from '@material-ui/core'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GithubIcon from '@material-ui/icons/GitHub';\r\nimport { Basics, BasicsData } from '../../appTypes';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        large: {\r\n            width: theme.spacing(20),\r\n            height: theme.spacing(20),\r\n        },\r\n        buttons: {\r\n            textTransform: \"none\"\r\n        },        \r\n    }),\r\n);\r\n\r\nconst logos = [<GithubIcon fontSize=\"large\"/>, <LinkedInIcon fontSize=\"large\"/>];\r\n\r\nconst ContactMePage: React.FC<Basics> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const [basics, setBasics] = useState<BasicsData>();\r\n\r\n    useEffect(() => {\r\n        setBasics(props.data);\r\n    }, [props.data]);\r\n\r\n    if (basics !== undefined && basics !== null && basics.name !== '') {\r\n        return (\r\n            <React.Fragment>\r\n                <Box display=\"flex\" width={'80%'} m=\"auto\" mt={2} justifyContent=\"center\" alignContent=\"center\" alignItems=\"center\">\r\n                    <LazyLoad once placeholder={<Loader />}>\r\n                        <Avatar alt={basics?.name} src={basics?.picture} className={classes.large} />\r\n                    </LazyLoad>\r\n                </Box>\r\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" p={1} m={1}>\r\n                    {basics.profiles.map((profile, index) => (\r\n                        <Box p={1} key={index}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.buttons}\r\n                                href={profile.url}\r\n                                target=\"_blank\"\r\n                                startIcon={logos[index]}\r\n                                size=\"large\">{profile.network}<br />{profile.username}</Button>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return <Loader />\r\n    }\r\n};\r\n\r\nexport default ContactMePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage: React.FC = (): JSX.Element => {\r\n    return (\r\n        <div>\r\n            <p>404 page not found</p>\r\n            <p style={{ textAlign: \"center\" }}>\r\n                <Link to=\"/\">Go to Home </Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","import React, { useEffect, useState } from 'react';\n\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport axios from './axios';\n\nimport { Basics, Skills, Skill, Education, School, Projects, Experiences, Experience, Project, BasicsData } from './appTypes';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/Theme/Theme';\n\nimport Header from './components/Header/Header';\nimport PageTitle from './components/PageTitle/PageTitle';\nimport Footer from './components/Footer/Footer';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport Error from './components/Error/Error';\nimport HomePage from './pages/HomePage/HomePage';\nimport AboutMePage from './pages/AboutMePage/AboutMePage';\nimport SkillsPage from './pages/SkillsPage/SkillsPage';\nimport EducationPage from './pages/EducationPage/EducationPage';\nimport ProjectsPage from './pages/ProjectsPage/ProjectsPage';\nimport ProjectPage from './pages/ProjectsPage/ProjectPage';\nimport ExperiencePage from './pages/ExperiencePage/ExperiencePage';\nimport ContactMePage from './pages/ContactMePage/ContactMePage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nconst useStyles = makeStyles({\n    container: {\n        margin: '20px auto 50px',\n    }\n});\n\nconst App: React.FC = (): JSX.Element => {\n\n    const [myBasics, setMyBasics] = useState<Basics>({ data: { headline: '', summary: '', picture: '', label: '', name: '', profiles: [] } });\n    const [mySkills, setMySkills] = useState<Skills>({ data: [] });\n    const [myEducation, setMyEducation] = useState<Education>({ schools: [], courses: [] });\n    const [myProjects, setMyProjects] = useState<Projects>({ data: [] });\n    const [myExperience, setMyExperience] = useState<Experiences>({ data: [] });\n    const [error, setError] = useState<boolean>(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n        axios.get('/')\n            .then(response => {\n\n                // Set Basics\n                let updatedBasics: BasicsData = response.data.basics;\n                \n                updatedBasics.profiles.shift();\n                \n                setMyBasics({ data: updatedBasics });\n\n                // Set Skills\n                let updatedSkilss: Array<Skill> = response.data.skills;\n\n                updatedSkilss.map( (skill, index) => {\n                    updatedSkilss[index].logo = '/images/skills/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                updatedSkilss[0].knownSince = 2014;\n                updatedSkilss[1].knownSince = 2001;\n                updatedSkilss[2].knownSince = 2019;\n                updatedSkilss[3].knownSince = 2019;\n                updatedSkilss[4].knownSince = 2004;\n                updatedSkilss[5].knownSince = 2004;\n                updatedSkilss[6].knownSince = 2019;\n                updatedSkilss[7].knownSince = 2020;\n                updatedSkilss[8].knownSince = 2006;\n\n                setMySkills({ data:  updatedSkilss});\n\n                // Set Education\n                let updatedSchools: Array<School> = response.data.education;\n                \n                updatedSchools.map( (school, index) => {\n                    updatedSchools[index].logo = '/images/education/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                updatedSchools[0].website = 'http://egitim.ankara.edu.tr';\n                updatedSchools[1].website = 'http://www.science.ankara.edu.tr';\n                updatedSchools[2].website = 'http://aal.meb.k12.tr';\n                \n                let courses: Array<string> = [\n                    'Advanced Programming (C++)',\n                    'Applied Mathematics',\n                    'Cryptology',\n                    'Differential Equations',\n                    'Fortran',\n                    'Java',\n                    'Mathematical Modelling',\n                    'Matlab',\n                    'Modern Programming (PHP)',\n                    'Motion Geometry',\n                    'Numerical Analysis',\n                    'Programming (C)',\n                    'Quaternion Theory',\n                    'Statistics',\n                    'Transforms and Geometries'\n                ];\n\n                setMyEducation( { schools: updatedSchools, courses: courses});\n\n                // Set Projects\n                let updatedProjects: Array<Project> = response.data.projects;\n\n                updatedProjects.map( (project, index) => {\n                    updatedProjects[index].logo = '/images/projects/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                updatedProjects[0].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[1].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[2].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[3].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n\n                updatedProjects[0].gallery = {\n                    caption: 'Here are the screenshots of Endeksa that I developed for the Neozeka Software Company in Ankara, Turkey in 2017.',\n                    description: \n                        'This application that I contributed is extensive and significant.\\n' + \n                        'It helped the Neozeka Software Company increase market share in real estate business.\\n' +\n                        'It\\'s mainly used by real estate professionals to increase their accuracy rate for valuation and increase efficiency in their workflow.\\n' +\n                        'It\\'s also used by individuals to get estimated valuation and useful analytics of their properties.\\n' +\n                        'I am thrilled about this website and its impact.'\n                };\n                updatedProjects[1].gallery = {\n                    caption: 'Here are screenshots of AppMerket Developer Portal that I developed for the Başarı Mobile Company in Ankara, Turkey in 2014.',\n                    description: 'Description goes here'\n                };\n                updatedProjects[2].gallery = {\n                    caption: 'Here are screenshots of Oyunus that I developed for an individual company in Ankara, Turkey in 2013.',\n                    description: 'Description goes here'\n                };\n                updatedProjects[3].gallery = {\n                    caption: 'Here are screenshots of Mitos that I developed for the Mikrobeta Software Company in Ankara, Turkey in 2011.',\n                    description: 'Description goes here'\n                };               \n\n                setMyProjects({ data:  updatedProjects});\n\n                // Set Experience\n                let updatedExperiences: Array<Experience> = response.data.work;\n                \n                updatedExperiences.map( (experience, index) => {\n                    updatedExperiences[index].logo = '/images/experience/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                setMyExperience({ data:  updatedExperiences});\n\n            })\n            .catch(error => {\n                setError(true);\n            });\n    }, []);\n\n    let content = (\n        <Switch>\n            <Route exact path='/' render={(props) => <HomePage data={myBasics.data} />} />\n            <Route exact path='/about-me' render={(props) => <AboutMePage data={myBasics.data} />} />\n            <Route exact path='/skills' render={(props) => <SkillsPage data={mySkills.data} />} />\n            <Route exact path='/education' render={(props) => <EducationPage schools={myEducation.schools} courses={myEducation.courses} />} />\n            <Route exact path='/projects' render={(props) => <ProjectsPage data={myProjects.data} />} />\n            <Route path='/projects/:id' render={(props) => <ProjectPage data={myProjects.data[props.match.params.id - 1]} />} />\n            <Route exact path='/experience' render={(props) => <ExperiencePage data={myExperience.data} />} />\n            <Route path='/contact-me' render={(props) => <ContactMePage data={myBasics.data} />} />\n            <Route path='/404' component={NotFoundPage} />\n            <Redirect to='/404' />\n        </Switch>\n    );\n\n    if (error) {\n        content = <Error />;\n    }\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <HashRouter>\n                <CssBaseline>\n                    <Header />\n                    <Container maxWidth=\"xl\" className={classes.container}>\n                        <PageTitle />\n                        {content}\n                    </Container>\n                    <Footer />\n                </CssBaseline>\n            </HashRouter>\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image1.45e39a82.jpg\";"],"sourceRoot":""}
{"version":3,"sources":["assets/images/image1.jpg","assets/images/image2.jpg","axios.tsx","components/Theme/Theme.tsx","components/Menu/Menu.tsx","components/Header/Header.tsx","components/PageTitle/PageTitle.tsx","components/Footer/Footer.tsx","components/Error/Error.tsx","components/Loader/Loader.tsx","pages/HomePage/HomePage.tsx","pages/AboutMePage/AboutMePage.tsx","pages/SkillsPage/SkillsPage.tsx","pages/EducationPage/EducationPage.tsx","pages/ProjectsPage/ProjectsPage.tsx","pages/ProjectsPage/ProjectPage.tsx","pages/ExperiencePage/ExperiencePage.tsx","pages/ContactMePage/ContactMePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","list","width","fullList","Menu","isOpen","onClickHandler","classes","className","clsx","role","onClick","onKeyDown","List","ListItem","component","NavLink","to","exact","button","key","ListItemIcon","ListItemText","Divider","Drawer","open","onClose","createStyles","root","flexGrow","zIndex","menuButton","marginRight","spacing","border","title","Header","useState","isMenuOpen","setIsMenuOpen","toggleDrawer","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","PageTitle","location","useLocation","setTitle","useEffect","pathname","Fragment","bottom","textAlign","backgroundColor","fontSize","Footer","Error","Box","Loader","display","m","height","justifyContent","alignContent","marginTop","alignItems","CircularProgress","HomePage","props","setList","data","name","lines","push","label","headline","bgImages","image1","image2","mt","p","borderRadius","bgcolor","length","startDelay","cursor","hideWhenDone","map","text","index","Delay","ms","images","duration","transition","left","large","AboutMePage","summary","split","flexWrap","placeholder","Avatar","alt","src","picture","medium","padding","buttons","textTransform","SkillsPage","skill","Card","CardHeader","avatar","logo","subheader","knownSince","CardContent","yearsOfExperience","CardActions","Rating","value","rating","precision","readOnly","dense","Button","href","endIcon","target","rel","pb","courseList","maxWidth","background","paper","EducationPage","schools","setSchools","courses","setCourses","school","institution","description","studyType","area","moment","startDate","format","endDate","website","startIcon","size","course","Chip","icon","media","backgroundSize","paddingTop","ProjectsPage","project","once","displayName","action","languages","join","CardMedia","image","resolutions","thumbnail","url","card","margin","expand","transform","marginLeft","transitions","shortest","expandOpen","ProjectPage","projectData","setProjectData","photoIndex","setPhotoIndex","setIsOpen","React","expanded","setExpanded","undefined","CardActionArea","mobile","align","gallery","caption","sentence","aria-expanded","Collapse","in","timeout","unmountOnExit","myRole","architecture","libraries","mainSrc","desktop","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","buttons2","ExperiencePage","work","company","logos","ContactMePage","basics","setBasics","profiles","profile","network","username","NotFoundPage","style","container","App","myBasics","setMyBasics","mySkills","setMySkills","myEducation","setMyEducation","myProjects","setMyProjects","myExperience","setMyExperience","error","setError","get","then","response","updatedBasics","shift","updatedSkilss","skills","updatedSchools","education","updatedProjects","projects","updatedExperiences","experience","catch","content","path","render","match","params","id","CssBaseline","Container","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ecf38955.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.45e39a82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.0f0eccea.jpg\";","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://gitconnected.com/v1/portfolio/huseyindeniz'\r\n});\r\n\r\nexport default instance;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: { main: '#efefef' },\r\n        secondary: { main: '#333' }\r\n    }\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 'auto',\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport interface MenuProps {\r\n  isOpen: boolean;\r\n  onClickHandler: Function;\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ isOpen, onClickHandler }): JSX.Element => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const list = (\r\n    <div className={clsx(classes.list)}\r\n    role=\"presentation\"\r\n    onClick={() => onClickHandler(false)}\r\n    onKeyDown={() => onClickHandler(false)}\r\n    >\r\n      <List>\r\n        <ListItem component={NavLink} to=\"/\" exact button key='Home' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><HomeIcon /></ListItemIcon>\r\n          <ListItemText primary='Home' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/about-me\" exact button key='AboutMe' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><InfoIcon /></ListItemIcon>\r\n          <ListItemText primary='About Me' />\r\n        </ListItem>\r\n        <Divider />\r\n\r\n        <ListItem component={NavLink} to=\"/skills\" exact button key='Skills' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><ClassIcon /></ListItemIcon>\r\n          <ListItemText primary='Skills' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/education\" exact button key='Education' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n          <ListItemText primary='Education' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/projects\" exact button key='Projects' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><CheckCircleIcon /></ListItemIcon>\r\n          <ListItemText primary='Projects' />\r\n        </ListItem>\r\n        <ListItem component={NavLink} to=\"/experience\" exact button key='Experience' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><WorkIcon /></ListItemIcon>\r\n          <ListItemText primary='Experience' />\r\n        </ListItem>\r\n\r\n        <Divider />\r\n\r\n        <ListItem component={NavLink} to=\"/contact-me\" button key='Contact' onClick={() => onClickHandler(false)}>\r\n          <ListItemIcon><ContactMailIcon /></ListItemIcon>\r\n          <ListItemText primary='Contact Me' />\r\n        </ListItem>\r\n      </List>\r\n    </div >\r\n  );\r\n\r\n  return (\r\n    <Drawer key=\"1\" open={isOpen} onClose={() =>onClickHandler(false)}>\r\n      {list}\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default Menu;","import React, { useState } from 'react';\r\nimport Menu from '../Menu/Menu';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            zIndex: 990\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            border: '1px solid #bbb',\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\nconst Header: React.FC = (): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\r\n\r\n    const toggleDrawer = (isOpen: boolean) => {\r\n        setIsMenuOpen(isOpen);\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" className={classes.root}>\r\n            <Toolbar>\r\n                <IconButton onClick={() => toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>huseyindeniz.net</Typography>\r\n            </Toolbar>\r\n            <Menu isOpen={isMenuOpen} onClickHandler={toggleDrawer} />\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst PageTitle: React.FC = (): JSX.Element => {\r\n    const location = useLocation();\r\n    const [title, setTitle] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        switch (location.pathname) {\r\n            case '/':\r\n                setTitle('');\r\n                break;\r\n            case '/about-me':\r\n                setTitle('About Me');\r\n                break;\r\n            case '/skills':\r\n                setTitle('Skills');\r\n                break;\r\n            case '/education':\r\n                setTitle('Education');\r\n                break;\r\n            case '/projects':\r\n                setTitle('Projects');\r\n                break;\r\n            case '/experience':\r\n                setTitle('Experience');\r\n                break;\r\n            case '/contact-me':\r\n                setTitle('Contact Me');\r\n                break;\r\n            default:\r\n                setTitle('');\r\n                break;\r\n        }\r\n    }, [location]);\r\n\r\n    if (title !== '') {\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h4\" color=\"textPrimary\" component=\"h1\">{title}</Typography>\r\n                <Divider />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (<React.Fragment />);\r\n    }\r\n}\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#efefef\",\r\n        fontSize: \"0.6rem\"\r\n    },\r\n});\r\n\r\nconst Footer: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <p>{'\\u00A9'} Copyright, 2020<br />\r\n            Used tech stack in this web site: React.js(with Hooks), Typescript, Material-UI. Developed by Hüseyin Deniz KIVRAK and freely hosted on Github Pages.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Typography, Box } from '@material-ui/core';\r\n\r\nconst Error: React.FC = (): JSX.Element => {\r\n    return (\r\n        <Box>\r\n            <Typography>An error occured.</Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loader: React.FC = (): JSX.Element => (\r\n    <Box display=\"flex\" width={'80%'} m=\"auto\" height=\"200px\" justifyContent=\"center\" alignContent=\"center\" marginTop=\"20px\" alignItems=\"center\">\r\n        <CircularProgress color=\"secondary\" />\r\n    </Box>\r\n);\r\n\r\nexport default Loader;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Basics } from '../../appTypes';\r\n\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport Typist from 'react-typist';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport BackgroundSlider from 'react-background-slider';\r\nimport image1 from '../../assets/images/image1.jpg';\r\nimport image2 from '../../assets/images/image2.jpg';\r\n\r\nimport './HomePage.css';\r\n\r\nconst HomePage: React.FC<Basics> = (props): JSX.Element => {\r\n\r\n    const [list, setList] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        if (props.data.name !== '') {\r\n            let lines: Array<string> = [];\r\n            lines.push(props.data.name);\r\n            lines.push(' ');\r\n            lines.push(props.data.label);\r\n            lines.push(' ');\r\n            lines.push(props.data.headline);\r\n            setList(lines);\r\n        }\r\n    }, [props.data]);\r\n\r\n    const bgImages = [image1, image2];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box width={'80%'} m=\"auto\" mt={2} p={2} textAlign=\"center\" borderRadius=\"10px\" color=\"grey\" bgcolor=\"rgba(255,255,255,0.5)\">\r\n                {list.length > 0 ?\r\n                    <Typist startDelay={2000} cursor={{ hideWhenDone: true }}>\r\n                        {list.map((text, index) => { return (<Typography variant=\"h5\" component=\"span\" key={index}>{text}<Typist.Delay ms={1250} /><br /></Typography>) })}\r\n                    </Typist> :\r\n                    <Loader />\r\n                }\r\n                <BackgroundSlider images={bgImages} duration={5} transition={2} />\r\n            </Box>\r\n            <Box width={'80%'} fontSize=\"0.6rem\" m=\"auto\" p={1} position=\"fixed\" bottom=\"70px\" left=\"10%\" textAlign=\"center\" borderRadius=\"10px\" color=\"grey\" bgcolor=\"rgba(255,255,255,0.2)\">\r\n                Notice: As a Westworld fan, I used some public images from the show that I found on the internet.\r\n                In case of request due to copyright issues, they will be removed.\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box } from '@material-ui/core'\r\nimport { Basics } from '../../appTypes';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        large: {\r\n            width: theme.spacing(20),\r\n            height: theme.spacing(20),\r\n        },\r\n    }),\r\n);\r\n\r\n\r\nconst AboutMePage: React.FC<Basics> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        if (props.data.summary !== '') {\r\n            setList(props.data.summary.split('\\n'));\r\n        }\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <Typography component=\"div\">\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\" p={1} m={1}>\r\n                <Box p={1}>\r\n                    <LazyLoad placeholder={<Loader />}><Avatar alt={props.data.name} src={props.data.picture} className={classes.large} /></LazyLoad>\r\n                </Box>\r\n                <Box p={1} flexWrap={1}>\r\n                    <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Summary</Typography>\r\n                    {list.length > 0 ?\r\n                        list.map((text, index) => (\r\n                            <Box key={index} m={1}>\r\n                                - {text}\r\n                            </Box>\r\n                        )) :\r\n                        <Loader />\r\n                    }\r\n                    <Box mt={2}>\r\n                        <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Hobbies and likes</Typography>\r\n                        <ul>\r\n                            <li>robotics</li>\r\n                            <li>philosophy</li>\r\n                            <li>psychology</li>\r\n                            <li>poetry</li>\r\n                            <li>fishing</li>\r\n                        </ul>\r\n                        <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Descriptive notes about me</Typography>\r\n                        <ul>\r\n                            <li>Passion for science</li>\r\n                            <li>Self-teaching and love of learning</li>\r\n                            <li>Hidden experience</li>\r\n                            <li>Variety of technologies</li>\r\n                            <li>Formal qualifications</li>\r\n                            <li>Fast adaptation to new technologies</li>\r\n                        </ul>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default AboutMePage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Skills, Skill } from '../../appTypes';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { List, ListItem, ListItemText, ListItemIcon, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n            padding: '10px'\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n    }),\r\n);\r\n\r\nconst SkillsPage: React.FC<Skills> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<Skill>>([]);\r\n\r\n    useEffect(() => {\r\n        setList(props.data);\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Featured Skills</Typography>\r\n            </Box>\r\n            {list.length > 0 ?\r\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" p={1} m={1}>\r\n                    {list.map((skill, index) => (\r\n                        <Box p={1} key={index}>\r\n                            <Card>\r\n                                <CardHeader avatar={<LazyLoad placeholder={<Loader />}><Avatar\r\n                                    variant=\"rounded\"\r\n                                    className={classes.medium}\r\n                                    alt={skill.name}\r\n                                    src={skill.logo} /></LazyLoad>}\r\n                                    title={skill.name} subheader={\"known since \" + skill.knownSince} />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {skill.yearsOfExperience} year(s) professional work experience\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Rating name=\"read-only\" value={skill.rating} precision={0.5} readOnly />\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Box>\r\n                    ))}\r\n                </Box> :\r\n                <Loader />\r\n            }\r\n            <Box mt={2} p={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Certificates</Typography>\r\n                <List dense={true}>\r\n                    <ListItem>\r\n                        <ListItemIcon><Avatar variant=\"rounded\" className={classes.medium}\r\n                            alt='ROS For Beginners Path'\r\n                            src='images/skills/construct-logo.png' /></ListItemIcon>\r\n                        <ListItemText primary=\"ROS For Beginners Path\"\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                        The Construct\r\n                                        </Typography>\r\n                                    <br />Issued Oct 2019 - No Expiration Date<br />\r\n                                    Credential ID RIA3B6359D538C0<br />\r\n                                    <Button href='https://www.robotigniteacademy.com/en/accomplishments/verify/RIA3B6359D538C0/'\r\n                                        endIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        className={classes.buttons}\r\n                                        rel=\"noopener\">See credential</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><Avatar variant=\"rounded\" className={classes.medium}\r\n                            alt='MCSD: App Builder'\r\n                            src='images/skills/microsoft-logo.png' /></ListItemIcon>\r\n                        <ListItemText primary=\"MCSD: App Builder\"\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                        Microsoft\r\n                                    </Typography>\r\n                                    <br />Issued Mar 2018 - No Expiration Date<br />\r\n                                    Credential ID G684-9843<br />\r\n                                    <Button href='https://www.microsoft.com/en-us/learning/mcsd-app-builder-certification.aspx'\r\n                                        endIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        className={classes.buttons}\r\n                                        rel=\"noopener\">See credential</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><Avatar variant=\"rounded\" className={classes.medium}\r\n                            alt='MCSA: Web Applications'\r\n                            src='images/skills/microsoft-logo.png' /></ListItemIcon>\r\n                        <ListItemText primary=\"MCSA: Web Applications\"\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                        Microsoft\r\n                                    </Typography>\r\n                                    <br />Issued Sep 2016 - No Expiration Date<br />\r\n                                    Credential ID F812-0601<br />\r\n                                    <Button href='https://www.microsoft.com/en-us/learning/mcsa-web-applications-certification.aspx'\r\n                                        endIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        className={classes.buttons}\r\n                                        rel=\"noopener\">See credential</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><Avatar variant=\"rounded\" className={classes.medium}\r\n                            alt='Programming in HTML5 with Javascript and CSS3 Specialist'\r\n                            src='images/skills/microsoft-logo.png' /></ListItemIcon>\r\n                        <ListItemText primary=\"Programming in HTML5 with Javascript and CSS3 Specialist\"\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                        Microsoft\r\n                                    </Typography>\r\n                                    <br />Issued May 2014 - No Expiration Date<br />\r\n                                    Credential ID E831-8989<br />\r\n                                    <Button href='https://www.microsoft.com/en-us/learning/exam-70-480.aspx'\r\n                                        endIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        className={classes.buttons}\r\n                                        rel=\"noopener\">See credential</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><Avatar variant=\"rounded\" className={classes.medium}\r\n                            alt='Microsoft Certified Professional (MCP)'\r\n                            src='images/skills/microsoft-logo.png' /></ListItemIcon>\r\n                        <ListItemText primary=\"Microsoft Certified Professional (MCP)\"\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                        Microsoft\r\n                                    </Typography>\r\n                                    <br />Issued Apr 2014 - No Expiration Date<br />\r\n                                    Credential ID E793-5702<br />\r\n                                    <Button href='https://www.microsoft.com/en-us/learning/microsoft-certified-professional.aspx'\r\n                                        endIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        className={classes.buttons}\r\n                                        rel=\"noopener\">See credential</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><Avatar variant=\"rounded\" className={classes.medium}\r\n                            alt='Microsoft Technology Associate (MTA)'\r\n                            src='images/skills/microsoft-logo.png' /></ListItemIcon>\r\n                        <ListItemText primary=\"Microsoft Technology Associate (MTA)\"\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                        Microsoft\r\n                                    </Typography>\r\n                                    <br />Issued Apr 2014 - No Expiration Date<br />\r\n                                    Credential ID E793-5701<br />\r\n                                    <Button href='http://www.microsoft.com/learning/en-us/mta-certification.aspx'\r\n                                        endIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        className={classes.buttons}\r\n                                        rel=\"noopener\">See credential</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Languages</Typography>\r\n                <List dense={true}>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Turkish\" secondary=\"Native or bilingual proficiency\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"English\" secondary=\"Professional working proficiency\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Others</Typography>\r\n                <p>Beside featured skills at the top, I worked on the following technologies for professional or hobby purposes</p>\r\n                <List dense={true}>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Programming/Scripting Languages\" secondary=\"qbasic, visual basic, fortran, avr assembly, javascript, typescript, html, css\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Database\" secondary=\"MySQL, MSSQL, Oracle, PostgreSQL, Cassandra, MongoDB\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Frameworks/Libraries\" secondary=\"Zend, Yii, Spring MVC, ASP.NET MVC5, .net core, bootstrap, jquery, angular, material-ui, tensorflow 2\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Methodology, Technology and Standarts\" secondary=\"Design Patterns, TDD, DDD\" />\r\n                    </ListItem>                    \r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Versioning\" secondary=\"SVN, StarTeam, TFS, Git\" />\r\n                    </ListItem>  \r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Cloud\" secondary=\"Azure, Docker, Kubernetes, SaltStack\" />\r\n                    </ListItem>      \r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Web Servers\" secondary=\"Apache HTTP, Apache Tomcat, Oracle WebLogic, IIS\" />\r\n                    </ListItem>                                                      \r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Third party applications\" secondary=\"Solidworks, Solidworks Electrical, Proteus, Adobe Fireworks, Adobe Dreamweaver, Adobe InDesign, Adobe Illustrator, Adobe Photoshop\" />\r\n                    </ListItem>                    \r\n                </List>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SkillsPage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Education, School } from '../../appTypes';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nimport moment from 'moment/moment';\r\nimport 'moment/locale/en-gb';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        courseList: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n    }),\r\n);\r\n\r\nconst EducationPage: React.FC<Education> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [schools, setSchools] = useState<Array<School>>([]);\r\n    const [courses, setCourses] = useState<Array<string>>([]);\r\n\r\n    useEffect(() => {\r\n        setSchools(props.schools);\r\n        setCourses(props.courses);\r\n    }, [props.schools, props.courses]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" p={1} m={1}>\r\n                {schools.length > 0 ?\r\n                    schools.map((school, index) => (\r\n                        <Box p={1} key={index}>\r\n                            <Card>\r\n                                <CardHeader avatar={<LazyLoad placeholder={<Loader />}><Avatar\r\n                                    variant=\"rounded\"\r\n                                    className={classes.medium}\r\n                                    alt={school.institution}\r\n                                    src={school.logo} /></LazyLoad>}\r\n                                    subheader={school.institution + ', ' + school.description}\r\n                                    title={school.studyType + ' in ' + school.area +\r\n                                    ' (' + moment(school.startDate).format('MMM YYYY') + ', ' +\r\n                                    moment(school.endDate).format('MMM YYYY') + ')'} />\r\n                                <CardActions>\r\n                                    <Box width=\"100%\" textAlign=\"right\">\r\n                                        <Button\r\n                                            href={school.website}\r\n                                            className={classes.buttons}\r\n                                            startIcon={<OpenInNewIcon />}\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\">Institution Website</Button>\r\n                                    </Box>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Box>\r\n                    )) : <Loader />\r\n                }\r\n            </Box>\r\n            <Divider />\r\n            <Box mt={2}>\r\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"h1\">Featured courses that I took and enjoyed in university.</Typography>\r\n                {courses.length > 0 ?\r\n                    <Box display=\"flex\" flexWrap=\"wrap\" p={1} m={1}>\r\n                            {courses.map((course, index) => (\r\n                                <Box m={1} key={index}><Chip label={course} icon={<CheckIcon />} /></Box>\r\n                            ))}\r\n                    </Box> : <Loader />\r\n                }\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EducationPage;","import React, { useState, useEffect } from 'react';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Projects, Project } from '../../appTypes';\r\nimport { Chip, ListItemIcon, ListItemText, List, ListItem } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        media: {\r\n            backgroundSize: 'contain',\r\n            height: 0,\r\n            paddingTop: '40%', // 16:9\r\n        },\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n    }),\r\n);\r\n\r\nconst ProjectsPage: React.FC<Projects> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<Project>>([]);\r\n\r\n    useEffect(() => {\r\n        setList(props.data);\r\n    }, [props.data]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Featured Projects</Typography>\r\n            </Box>\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" p={1} m={1}>\r\n                {list.length > 0 ?\r\n                    list.map((project, index) => (\r\n                        <Box p={1} key={index}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    avatar={<LazyLoad once placeholder={<Loader />}><Avatar\r\n                                        variant=\"rounded\"\r\n                                        className={classes.medium}\r\n                                        alt={project.displayName}\r\n                                        src={project.logo} /></LazyLoad>}\r\n                                    title={project.displayName}\r\n                                    action={<Chip label={project.languages.join(', ')} size=\"small\" />} />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={project.images[0].resolutions.thumbnail.url}\r\n                                    title={project.displayName} />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                                        {project.summary}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Box width=\"100%\" display=\"flex\">\r\n                                        <Box flexGrow={1}>\r\n                                            <Button\r\n                                                className={classes.buttons}\r\n                                                href={'/#/projects/' + (index + 1)}\r\n                                                startIcon={<DetailsIcon />}\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\">Learn More</Button>\r\n                                        </Box>\r\n                                        <Box textAlign=\"right\">\r\n                                            <Button\r\n                                                className={classes.buttons}\r\n                                                href={project.website}\r\n                                                startIcon={<OpenInNewIcon />}\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\">Project Website</Button>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Box>\r\n                    )) : <Loader />}\r\n            </Box>\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Others</Typography>\r\n                <List dense={true}>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"OPL-STR\"\r\n                            secondary={<React.Fragment>\r\n                                Summary: Mobile Warehouse Robot.<br />\r\n                                    Description: Project information is confidential.<br />\r\n                                    Role: Team Lead<br />\r\n                                    Notes: Non-confidential information can be provided if requested in person.</React.Fragment>} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"TKDK Erozyon\"\r\n                            secondary={<React.Fragment>\r\n                                Summary: Online application and tracking system to assist farmers who apply for Soil Cover Management and Soil Erosion Control support.<br />\r\n                                    Role: Full Stack Developer<br />\r\n                                    Technologies: ASP.NET MVC 5.<br />\r\n                                    Status: Terminated due to maintenance problems.</React.Fragment>} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Hıpır, MobilOyuncu, Samsung Apps\"\r\n                            secondary={<React.Fragment>\r\n                                Summary: Java games and multimedia market application for old java based mobile phones.<br />\r\n                                    Role: Full Stack Developer<br />\r\n                                    Technologies: Spring MVC.<br />\r\n                                    Status: Terminated due to maintenance problems.</React.Fragment>} />\r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n            <Box mt={2} pb={2}>\r\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Personal</Typography>\r\n                <List dense={true}>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Rover Robot Angela\"\r\n                            secondary={<React.Fragment>\r\n                                Summary: Custom Nasa JPL's Open Source Rover Robot.<br />\r\n                                    Description: I used this template for 5 enterprise applications.<br />\r\n                                    Technologies: ROS, Solidworks<br />\r\n                                    Status: Failed due to weak 3d printed chassis.</React.Fragment>} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Enterprise Web App Template for ASP.NET MVC 5\"\r\n                            secondary={<React.Fragment>\r\n                                Summary: Monolitich boilerplate for .net mvc 5 applications.<br />\r\n                                    Description: I used this template for 5 enterprise applications.<br />\r\n                                    Technologies: Code First with Fluent API, i10n, i18n, identity 2, di, theming, multi db<br />\r\n                                    Status: Terminated due to much more modern technologies.</React.Fragment>} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"R2D2 Web Engine\"\r\n                            secondary={<React.Fragment>\r\n                                Summary: PHP based web CMS like Wordpress.<br />\r\n                                    Description: I used this CMS for many small company or personal websites between 2007-2010.<br />\r\n                                    Status: Terminated due to inevitable CMS Wordpress.</React.Fragment>} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Sikloid\"\r\n                            secondary={<React.Fragment>\r\n                                Summary: Graphic program which draws some kinds of cycloids with parametric function entry.<br />\r\n                                    Description: I wrote this application for academic purposes in university in 2004.<br />\r\n                                    Technologies: Both Java and Visual Basic versions<br />\r\n                                    Notes: I had written this application, before I started working as a software engineer.\r\n                                    </React.Fragment>} />\r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProjectsPage;","import React, { useEffect, useState } from 'react';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { Project, ProjectDetail } from '../../appTypes';\r\n\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { CardActionArea, Chip, Divider, IconButton, Collapse, ListItem, List, ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        card: {\r\n            width: '80%',\r\n            margin: '0 auto'\r\n        },\r\n        media: {\r\n            backgroundSize: 'contain',\r\n            height: 0,\r\n            paddingTop: '30%', // 16:9\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n        medium: {\r\n            width: theme.spacing(5),\r\n            height: theme.spacing(5),\r\n        },\r\n        expand: {\r\n            border: '1px solid #bbb',\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n    }),\r\n);\r\n\r\nconst ProjectPage: React.FC<ProjectDetail> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [projectData, setProjectData] = useState<Project | undefined>();\r\n\r\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        setProjectData(props.data);\r\n    }, [props.data]);\r\n\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    if (projectData !== undefined && projectData !== null) {\r\n        return (\r\n            <React.Fragment>\r\n                <Box display=\"flex\" mt={2}>\r\n                    <Box flexGrow={1}>\r\n                        <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">\r\n                            Project: {projectData?.displayName}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box textAlign=\"right\">\r\n                        <Button\r\n                            href={'/#/projects'}\r\n                            className={classes.buttons}\r\n                            size=\"small\"\r\n                            startIcon={<BackIcon />}\r\n                            variant=\"outlined\">Back to All Projects</Button>\r\n                    </Box>\r\n                </Box>\r\n                <Divider />\r\n                <Box m={1} mt={2} pb={2}>\r\n                    <Card className={classes.card}>\r\n                        <CardHeader\r\n                            title={projectData?.displayName}\r\n                            action={<Chip label={projectData?.languages.join(', ')} size=\"small\" />}\r\n                            avatar={<LazyLoad once placeholder={<Loader />}><Avatar\r\n                                variant=\"rounded\"\r\n                                className={classes.medium}\r\n                                alt={projectData?.displayName}\r\n                                src={projectData?.logo} /></LazyLoad>}>\r\n                        </CardHeader>\r\n                        <CardActionArea onClick={() => setIsOpen(true)}>\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={projectData?.images[0].resolutions.mobile.url}\r\n                                title={projectData.displayName} />\r\n                            <CardContent>\r\n                                <Typography align=\"center\" variant=\"h6\" component=\"h3\">\r\n                                    {projectData?.gallery?.caption}\r\n                                </Typography>\r\n                                {projectData?.gallery?.description\r\n                                    .split('\\n')\r\n                                    .map( (sentence, index) => \r\n                                    <Typography key={index} align=\"center\" variant=\"body2\" component=\"p\">{sentence}</Typography>\r\n                                    )   \r\n                                }\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Box width=\"100%\" display=\"flex\">\r\n                                <Box flexGrow={1}>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        className={classes.buttons}\r\n                                        onClick={() => setIsOpen(true)}\r\n                                        startIcon={<PhotoLibraryIcon />}\r\n                                        size=\"small\"\r\n                                    >Open Gallery</Button>\r\n                                    <Button\r\n                                        className={classes.buttons}\r\n                                        href={projectData?.website}\r\n                                        startIcon={<OpenInNewIcon />}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\">Website</Button>\r\n                                </Box>\r\n                                <Box textAlign=\"right\">\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"Technical Details\">\r\n                                        <ExpandMoreIcon />\r\n                                    </IconButton>\r\n                                </Box>\r\n                            </Box>\r\n                        </CardActions>\r\n                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                            <CardContent>\r\n                                <Divider />\r\n                                <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"h4\">\r\n                                    Technical Details\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"My Role\"\r\n                                            secondary={projectData?.myRole} />\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Architecture\"\r\n                                            secondary={projectData?.architecture} />\r\n                                    </ListItem>                  \r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Languages\"\r\n                                            secondary={projectData?.languages.join(', ')} />\r\n                                    </ListItem>   \r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Frameworks / Libraries\"\r\n                                            secondary={projectData?.libraries.join(', ')} />\r\n                                    </ListItem>   \r\n                                    <ListItem>\r\n                                        <ListItemText\r\n                                            primary=\"Notes\"\r\n                                            secondary={projectData?.description} />\r\n                                    </ListItem>                                                                                                                            \r\n                                </List>\r\n                            </CardContent>\r\n                        </Collapse>\r\n                    </Card>\r\n                    {isOpen ?\r\n                        <Lightbox\r\n                            mainSrc={projectData?.images[photoIndex].resolutions.desktop.url}\r\n                            nextSrc={projectData?.images[(photoIndex + 1) % projectData?.images.length].resolutions.desktop.url}\r\n                            prevSrc={projectData?.images[(photoIndex + projectData?.images.length - 1) % projectData?.images.length].resolutions.desktop.url}\r\n                            onCloseRequest={() => setIsOpen(false)}\r\n                            onMovePrevRequest={() =>\r\n                                setPhotoIndex((photoIndex + projectData?.images.length - 1) % projectData?.images.length)\r\n                            }\r\n                            onMoveNextRequest={() =>\r\n                                setPhotoIndex((photoIndex + 1) % projectData?.images.length)\r\n                            }\r\n                        /> : null\r\n                    }\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return <Loader />;\r\n    }\r\n};\r\n\r\nexport default ProjectPage;","import React, { useEffect, useState } from 'react';\r\n\r\nimport LazyLoad from 'react-lazyload';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Experiences, Experience } from '../../appTypes';\r\n\r\nimport moment from 'moment/moment';\r\nimport 'moment/locale/en-gb';\r\nimport { List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        medium: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n        },\r\n        buttons: {\r\n            fontSize: '0.6rem',\r\n            textTransform: \"none\"\r\n        },\r\n        buttons2: {\r\n            textTransform: \"none\"\r\n        }        \r\n    }),\r\n);\r\n\r\nconst ExperiencePage: React.FC<Experiences> = (props): JSX.Element => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [list, setList] = useState<Array<Experience>>([]);\r\n\r\n    useEffect(() => {\r\n        setList(props.data);\r\n    }, [props.data]);\r\n\r\n    if (list.length > 0) {\r\n        return (\r\n            <React.Fragment>\r\n                <Box mt={2}>\r\n                    <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Featured Experiences</Typography>\r\n                </Box>\r\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\" p={1} m={1}>\r\n                    {list.length > 0 ?\r\n                        list.map((work, index) => (\r\n                            <Box p={1} key={index} flexGrow={1}>\r\n                                <Card>\r\n                                    <CardHeader\r\n                                        avatar={<LazyLoad placeholder={<Loader />}><Avatar\r\n                                            variant=\"rounded\"\r\n                                            className={classes.medium}\r\n                                            alt={work.company}\r\n                                            src={work.logo} /></LazyLoad>}\r\n                                        title={work.company}\r\n                                        subheader={work.position + ' (' + moment(work.startDate).format('MMM YYYY') + ', ' +\r\n                                            moment(work.endDate).format('MMM YYYY') + ')'}\r\n                                        action={work.location} />\r\n                                    <CardContent>\r\n                                        <List dense={true}>\r\n                                            {work.summary.split('\\n')\r\n                                                .map((sentence, index) => (\r\n                                                    <ListItem key={index}>\r\n                                                        <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                                                        <ListItemText primary={sentence}></ListItemText>\r\n                                                    </ListItem>\r\n                                                ))}\r\n                                        </List>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <Box width=\"100%\" textAlign=\"right\">\r\n                                            <Button\r\n                                                className={classes.buttons}\r\n                                                href={work.website}\r\n                                                startIcon={<OpenInNewIcon />}\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\">Company Website</Button>\r\n                                        </Box>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Box>\r\n                        )) : <Loader />\r\n                    }\r\n                </Box>\r\n                <Box mt={2} pb={2}>\r\n                    <Typography variant=\"subtitle1\" color=\"textPrimary\" component=\"h2\">Others</Typography>\r\n                    <p>I worked for a short period in the companies below, but I contributed to important projects.</p>\r\n                    <List>\r\n                        <ListItem>\r\n                            <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                            <ListItemText primary={<Button endIcon={<OpenInNewIcon />} className={classes.buttons2}\r\n                                    href=\"http://www.robutel.com/\" target=\"_blank\" rel=\"noopener\" color=\"secondary\">Robutel</Button>}\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                        <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                            contributed to ROFPP - C++ Programming Framework as a software engineer\r\n                                        </Typography>\r\n                                    </React.Fragment>\r\n                                } />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemIcon><CheckIcon /></ListItemIcon>\r\n                            <ListItemText primary={<Button endIcon={<OpenInNewIcon />} className={classes.buttons2}\r\n                                    href=\"https://www.epttavm.com\" target=\"_blank\" rel=\"noopener\" color=\"secondary\">ePTTAVM</Button>}\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                        <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                            contributed to e-commerce application \r\n                                            <Button endIcon={<OpenInNewIcon />} href=\"https://www.epttavm.com\" className={classes.buttons} target=\"_blank\" rel=\"noopener\" color=\"secondary\">https://www.epttavm.com</Button> \r\n                                            as a backend developer\r\n                                        </Typography>\r\n                                    </React.Fragment>\r\n                                } />\r\n                        </ListItem>\r\n                    </List>\r\n                    <p>I also worked as a part-time lecturer in some computer education centers in Ankara, Turkey before 2010. \r\n                        I gave C, Algorithm, PHP, Java, Dreamweaver, Fireworks, HTML, CSS and Advanced Database Programming lessons.</p>\r\n                </Box>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Loader />\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default ExperiencePage;","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Box } from '@material-ui/core'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GithubIcon from '@material-ui/icons/GitHub';\r\nimport { Basics, BasicsData } from '../../appTypes';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        large: {\r\n            width: theme.spacing(20),\r\n            height: theme.spacing(20),\r\n        },\r\n        buttons: {\r\n            textTransform: \"none\"\r\n        },        \r\n    }),\r\n);\r\n\r\nconst logos = [<GithubIcon fontSize=\"large\"/>, <LinkedInIcon fontSize=\"large\"/>];\r\n\r\nconst ContactMePage: React.FC<Basics> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const [basics, setBasics] = useState<BasicsData>();\r\n\r\n    useEffect(() => {\r\n        setBasics(props.data);\r\n    }, [props.data]);\r\n\r\n    if (basics !== undefined && basics !== null && basics.name !== '') {\r\n        return (\r\n            <React.Fragment>\r\n                <Box display=\"flex\" width={'80%'} m=\"auto\" mt={2} justifyContent=\"center\" alignContent=\"center\" alignItems=\"center\">\r\n                    <LazyLoad once placeholder={<Loader />}>\r\n                        <Avatar alt={basics?.name} src={basics?.picture} className={classes.large} />\r\n                    </LazyLoad>\r\n                </Box>\r\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" p={1} m={1}>\r\n                    {basics.profiles.map((profile, index) => (\r\n                        <Box p={1} key={index}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.buttons}\r\n                                href={profile.url}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener\"\r\n                                startIcon={logos[index]}\r\n                                size=\"large\">{profile.network}<br />{profile.username}</Button>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return <Loader />\r\n    }\r\n};\r\n\r\nexport default ContactMePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage: React.FC = (): JSX.Element => {\r\n    return (\r\n        <div>\r\n            <p>404 page not found</p>\r\n            <p style={{ textAlign: \"center\" }}>\r\n                <Link to=\"/\">Go to Home </Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","import React, { useEffect, useState } from 'react';\n\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport axios from './axios';\n\nimport { Basics, Skills, Skill, Education, School, Projects, Experiences, Experience, Project, BasicsData } from './appTypes';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/Theme/Theme';\n\nimport Header from './components/Header/Header';\nimport PageTitle from './components/PageTitle/PageTitle';\nimport Footer from './components/Footer/Footer';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport Error from './components/Error/Error';\nimport HomePage from './pages/HomePage/HomePage';\nimport AboutMePage from './pages/AboutMePage/AboutMePage';\nimport SkillsPage from './pages/SkillsPage/SkillsPage';\nimport EducationPage from './pages/EducationPage/EducationPage';\nimport ProjectsPage from './pages/ProjectsPage/ProjectsPage';\nimport ProjectPage from './pages/ProjectsPage/ProjectPage';\nimport ExperiencePage from './pages/ExperiencePage/ExperiencePage';\nimport ContactMePage from './pages/ContactMePage/ContactMePage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nconst useStyles = makeStyles({\n    container: {\n        margin: '20px auto 50px',\n    }\n});\n\nconst App: React.FC = (): JSX.Element => {\n\n    const [myBasics, setMyBasics] = useState<Basics>({ data: { headline: '', summary: '', picture: '', label: '', name: '', profiles: [] } });\n    const [mySkills, setMySkills] = useState<Skills>({ data: [] });\n    const [myEducation, setMyEducation] = useState<Education>({ schools: [], courses: [] });\n    const [myProjects, setMyProjects] = useState<Projects>({ data: [] });\n    const [myExperience, setMyExperience] = useState<Experiences>({ data: [] });\n    const [error, setError] = useState<boolean>(false);\n    const classes = useStyles();\n\n    useEffect(() => {\n        axios.get('/')\n            .then(response => {\n\n                // Set Basics\n                let updatedBasics: BasicsData = response.data.basics;\n\n                updatedBasics.profiles.shift();\n\n                setMyBasics({ data: updatedBasics });\n\n                // Set Skills\n                let updatedSkilss: Array<Skill> = response.data.skills;\n\n                updatedSkilss.map((skill, index) => {\n                    updatedSkilss[index].logo = '/images/skills/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                updatedSkilss[0].knownSince = 2014;\n                updatedSkilss[1].knownSince = 2001;\n                updatedSkilss[2].knownSince = 2019;\n                updatedSkilss[3].knownSince = 2019;\n                updatedSkilss[4].knownSince = 2004;\n                updatedSkilss[5].knownSince = 2004;\n                updatedSkilss[6].knownSince = 2019;\n                updatedSkilss[7].knownSince = 2020;\n                updatedSkilss[8].knownSince = 2006;\n\n                setMySkills({ data: updatedSkilss });\n\n                // Set Education\n                let updatedSchools: Array<School> = response.data.education;\n\n                updatedSchools.map((school, index) => {\n                    updatedSchools[index].logo = '/images/education/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                updatedSchools[0].website = 'http://egitim.ankara.edu.tr';\n                updatedSchools[1].website = 'http://www.science.ankara.edu.tr';\n                updatedSchools[2].website = 'http://aal.meb.k12.tr';\n\n                let courses: Array<string> = [\n                    'Advanced Programming (C++)',\n                    'Applied Mathematics',\n                    'Cryptology',\n                    'Differential Equations',\n                    'Fortran',\n                    'Java',\n                    'Mathematical Modelling',\n                    'Matlab',\n                    'Modern Programming (PHP)',\n                    'Motion Geometry',\n                    'Numerical Analysis',\n                    'Programming (C)',\n                    'Quaternion Theory',\n                    'Statistics',\n                    'Transforms and Geometries'\n                ];\n\n                setMyEducation({ schools: updatedSchools, courses: courses });\n\n                // Set Projects\n                let updatedProjects: Array<Project> = response.data.projects;\n\n                updatedProjects.map((project, index) => {\n                    updatedProjects[index].logo = '/images/projects/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                updatedProjects[0].myRole = 'Backend Developer';\n                updatedProjects[1].myRole = 'Full Stack Developer';\n                updatedProjects[2].myRole = 'Full Stack Developer';\n                updatedProjects[3].myRole = 'Full Stack Developer';\n                updatedProjects[4].myRole = 'Full Stack Developer';\n                updatedProjects[5].myRole = 'Full Stack Developer';\n\n                updatedProjects[0].architecture = 'Monolithic, MVC';\n                updatedProjects[1].architecture = 'Monolithic, MVC';\n                updatedProjects[2].architecture = 'Monolithic, MVC';\n                updatedProjects[3].architecture = 'Monolithic, MVC';\n                updatedProjects[4].architecture = 'Monolithic, MVC';\n                updatedProjects[5].architecture = 'Monolithic, MVC';\n\n                updatedProjects[0].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[1].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[2].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[3].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[4].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n                updatedProjects[5].description = 'notes goes here. notes goes here. notes goes here. notes goes here. notes goes here.';\n\n                updatedProjects[0].gallery = {\n                    caption: 'Here are the screenshots of Endeksa that I developed for the Neozeka Software Company in Ankara, Turkey in 2017.',\n                    description:\n                        'This application that I contributed is extensive and significant.\\n' +\n                        'It helped the Neozeka Software Company increase market share in real estate business.\\n' +\n                        'It\\'s mainly used by real estate professionals to increase their accuracy rate for valuation and increase efficiency in their workflow.\\n' +\n                        'It\\'s also used by individuals to get estimated valuation and useful analytics of their properties.\\n' +\n                        'I am delighted about this website and its impact.'\n                };               \n                updatedProjects[1].gallery = {\n                    caption: 'Here are the screenshots of Digital Library System that I developed for the SinerjiSoft Company in Ankara, Turkey in 2016.',\n                    description:\n                        'This application that I contributed is significant and easy-to-use.\\n' +\n                        'It helped the National Library of Turkey share some collection types online.\\n' +\n                        'It\\'s used by researchers to access manuscripts, periodicals and non-book material collections avaliable in the National Library of Turkey.\\n' +\n                        'I am delighted about this website.'\n                };\n                updatedProjects[2].gallery = {\n                    caption: 'Here are the screenshots of Agricultural Information System Dashboard that I developed for the SinerjiSoft Company in Ankara, Turkey in 2015',\n                    description:\n                        'This application that I created is modern and useful.\\n' +\n                        'It helped the Republic of Turkey Ministry of Agriculture and Forestry managers tracking Agricultural Information System.\\n' +\n                        'I am delighted about this application.'\n                };                                 \n                updatedProjects[3].gallery = {\n                    caption: 'Here are the screenshots of App Market Developer Portal that I developed for the Başarı Mobile Company in Ankara, Turkey in 2014.',\n                    description:\n                        'This application that I contributed is attractive and easy-to-use.\\n' +\n                        'It helped the Başarı Mobile Company increase market share in mobile application sales market.\\n' +\n                        'It\\'s used by mobile application developers to share their applications in Turkcell App Market.This is an alternate channel to Google Play and help developers to reach more customers.\\n' +\n                        'I am delighted about this website.'\n                };\n                updatedProjects[4].gallery = {\n                    caption: 'Here are the screenshots of Oyunus that I developed for an individual company in Ankara, Turkey in 2013.',\n                    description:\n                        'This application that I contributed is unique.\\n' +\n                        'It helped an individual company increase market share in word based games market .\\n' +\n                        'I am delighted about this website.'\n                };\n                updatedProjects[5].gallery = {\n                    caption: 'Here are screenshots of Mitos that I developed for the Mikrobeta Software Company in Ankara, Turkey in 2011.',\n                    description:\n                        'This application that I contributed is significant.\\n' +\n                        'It helped the Mikrobeta Company increase market share in academic publication sharing systems market.\\n' +\n                        'It\\'s used by university libraries to share their academician\\'s publications in a universal accesible format.\\n' +\n                        'I am delighted about this website.'\n                };\n\n                setMyProjects({ data: updatedProjects });\n\n                // Set Experience\n                let updatedExperiences: Array<Experience> = response.data.work;\n\n                updatedExperiences.map((experience, index) => {\n                    updatedExperiences[index].logo = '/images/experience/' + (index + 1) + '.png';\n                    return null;\n                });\n\n                setMyExperience({ data: updatedExperiences });\n\n            })\n            .catch(error => {\n                setError(true);\n            });\n    }, []);\n\n    let content = (\n        <Switch>\n            <Route exact path='/' render={(props) => <HomePage data={myBasics.data} />} />\n            <Route exact path='/about-me' render={(props) => <AboutMePage data={myBasics.data} />} />\n            <Route exact path='/skills' render={(props) => <SkillsPage data={mySkills.data} />} />\n            <Route exact path='/education' render={(props) => <EducationPage schools={myEducation.schools} courses={myEducation.courses} />} />\n            <Route exact path='/projects' render={(props) => <ProjectsPage data={myProjects.data} />} />\n            <Route path='/projects/:id' render={(props) => <ProjectPage data={myProjects.data[props.match.params.id - 1]} />} />\n            <Route exact path='/experience' render={(props) => <ExperiencePage data={myExperience.data} />} />\n            <Route path='/contact-me' render={(props) => <ContactMePage data={myBasics.data} />} />\n            <Route path='/404' component={NotFoundPage} />\n            <Redirect to='/404' />\n        </Switch>\n    );\n\n    if (error) {\n        content = <Error />;\n    }\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <HashRouter>\n                <CssBaseline>\n                    <Header />\n                    <Container maxWidth=\"xl\" className={classes.container}>\n                        <PageTitle />\n                        {content}\n                    </Container>\n                    <Footer />\n                </CssBaseline>\n            </HashRouter>\n        </MuiThemeProvider>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}